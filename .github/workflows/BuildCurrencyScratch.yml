name: CurrencyScratch

on:
  push:
    tags:
      - '*'

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      # Add additional steps for installing dependencies, linting, etc...
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build Linux Application
        run: |
          pyinstaller --windowed --onefile --hidden-import babel.numbers CurrencyScratch.py
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v2
        with:
          name: CurrencyScratch-Linux
          path: dist/CurrencyScratch

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      # Add additional steps for installing dependencies, linting, etc...
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build macOS Application
        run: |
          pyinstaller --windowed --onefile --hidden-import babel.numbers --osx-bundle-identifier=com.currencyScratch CurrencyScratch.py
      - name: Zip the .app for distribution
        run: |
          cd dist
          zip -r CurrencyScratch-macOS.zip CurrencyScratch.app
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v2
        with:
          name: CurrencyScratch-macOS
          path: dist/CurrencyScratch-macOS.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      # Add additional steps for installing dependencies, linting, etc...
      - name: Install dependencies (if required)
        run: |
          if (Test-Path requirements.txt) {
            pip install -r requirements.txt
          }
        shell: powershell
      - name: Build Windows Application
        run: |
          pyinstaller --windowed --onefile --hidden-import babel.numbers CurrencyScratch.py
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v2
        with:
          name: CurrencyScratch-Windows
          path: dist/CurrencyScratch.exe

  release:
    needs: [build-linux, build-macos, build-windows]
    permissions:
      contents: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: CurrencyScratch-Linux
      - name: Download macOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: CurrencyScratch-macOS
      - name: Download Windows Artifact
        uses: actions/download-artifact@v2
        with:
          name: CurrencyScratch-Windows
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CurrencyScratch
          asset_name: CurrencyScratch-Linux
          asset_content_type: application/octet-stream
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CurrencyScratch-macOS.zip
          asset_name: CurrencyScratch-macOS.zip
          asset_content_type: application/zip
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CurrencyScratch.exe
          asset_name: CurrencyScratch-Windows.exe
          asset_content_type: application/octet-stream
